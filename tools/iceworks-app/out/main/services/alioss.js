const e=require("ali-oss"),r=require("path"),s=require("../logger"),t=r=>{const s=new e(r);return s.agent=!1,s},a=async e=>{return t(e).listBuckets().catch(e=>(e.name="oss-getbuckets-error",s.error(e),Promise.reject(e)))},o=async(e,a,o="/",u)=>{const c=t(e);return await c.setBucket(a),Promise.all(u.map(e=>{let t=r.join(o,e.path);return t=(t=t.replace(/\\/g,"/")).replace(/^\//,""),c.put(t,e.fullPath).then((r={})=>r.res&&200===r.res.status?Promise.resolve({code:0,url:r.url,path:e.path}):Promise.resolve({code:1,message:`\u4e0a\u4f20\u5931\u8d25\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 (${r.res&&r.res.status||0})\u3002`})).catch(r=>(r.name="oss-upload-error",s.error(r),Promise.resolve({code:1,message:r.message,path:e.path})))}))};module.exports={getBuckets:a,upload2oss:o};