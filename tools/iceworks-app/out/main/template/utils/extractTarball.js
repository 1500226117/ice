const e=require("fs"),r=require("mkdirp"),t=require("path"),a=require("request"),s=require("request-progress"),n=require("zlib"),o=require("tar"),i=require("../../logger"),{DetailError:u}=require("../../error-handler"),c=require("../../utils/autoRetry");function p(c,p,l={},m=(()=>{}),d=(()=>{})){return new Promise((g,q)=>{const h=[],f=[],b=[],w=s(a({url:c,timeout:1e4}));d(w),w.on("progress",e=>{m(e)}).on("error",(e={})=>{e.name="download-tarball-error",e.data={url:c},i.error(e),q(new u(`\u94fe\u63a5 ${c} \u8bf7\u6c42\u5931\u8d25`,{message:e.message,stack:e.stack}))}).pipe(n.Unzip()).on("error",()=>{q(new u("\u5df2\u4e2d\u6b62\u521b\u5efa",{message:"",stack:""}))}).pipe(o.Parse()).on("entry",a=>{if(/\.npmignore/.test(a.path))return;let s=a.path.replace(/^package\//,"");const n=l.sourceCodeDirectory||"";if(n){if(!s.startsWith(n))return;s=s.replace(n,"")}let o=t.join(p,s);const u=t.parse(o);"_gitignore"===u.base&&(u.base=u.base.replace(/^_/,".")),o=t.format(u);const c=t.dirname(o);f.includes(c)||(f.push(c),r.sync(t.dirname(o))),i.info("extractTarball",o),h.push(o);const m=new Promise(r=>{a.pipe(e.createWriteStream(o)).on("finish",()=>r())});b.push(m)}).on("end",()=>{i.info("end",c),m({percent:1}),Promise.all(b).then(()=>g(h)).catch(()=>{q(new u("\u5199\u5165\u6587\u4ef6\u5931\u8d25"))})})})}const l=2;module.exports=c(p,2,e=>e.metadata&&"ETIMEDOUT"===e.metadata.message);